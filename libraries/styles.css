/* 0.89.4 */
@font-face {
  font-display: "swap";
  font-family: KaTeX_AMS;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_AMS-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Caligraphic;
  font-style: normal;
  font-weight: 700;
  src: url(fonts/KaTeX_Caligraphic-Bold.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Caligraphic;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Caligraphic-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Fraktur;
  font-style: normal;
  font-weight: 700;
  src: url(fonts/KaTeX_Fraktur-Bold.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Fraktur;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Fraktur-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Main;
  font-style: italic;
  font-weight: 700;
  src: url(fonts/KaTeX_Main-BoldItalic.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Main;
  font-style: normal;
  font-weight: 700;
  src: url(fonts/KaTeX_Main-Bold.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Main;
  font-style: italic;
  font-weight: 400;
  src: url(fonts/KaTeX_Main-Italic.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Main;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Main-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Math;
  font-style: italic;
  font-weight: 700;
  src: url(fonts/KaTeX_Math-BoldItalic.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Math;
  font-style: italic;
  font-weight: 400;
  src: url(fonts/KaTeX_Math-Italic.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: "KaTeX_SansSerif";
  font-style: normal;
  font-weight: 700;
  src: url(fonts/KaTeX_SansSerif-Bold.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: "KaTeX_SansSerif";
  font-style: italic;
  font-weight: 400;
  src: url(fonts/KaTeX_SansSerif-Italic.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: "KaTeX_SansSerif";
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_SansSerif-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Script;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Script-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Size1;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Size1-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Size2;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Size2-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Size3;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Size3-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Size4;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Size4-Regular.woff2) format("woff2");
}
@font-face {
  font-display: "swap";
  font-family: KaTeX_Typewriter;
  font-style: normal;
  font-weight: 400;
  src: url(fonts/KaTeX_Typewriter-Regular.woff2) format("woff2");
}
:root {
  --ML__static-fonts: true;
}
* {
  margin: 0;
  padding: 0;
  box-shadow: none;
  box-sizing: none;
}
/* Aqui comienza los iconos es formato unicode de los botones*/
.check::after {
  display: inline-block;
  color: #fff;
  content: " ✓";
  font-weight: bolder;
  font-size: 26px;
}

.reset::after {
  color: black;
  content: "\021bb";
  font-weight: bolder;
  font-size: 26px;
}

.conect::after {
  color: #d65d06;
  content: "\2933";
  font-weight: bolder;
  font-size: 26px;
}

.infinite::after {
  color: #d65d06;
  content: "\221E";
  font-weight: bolder;
  font-size: 26px;
}

.pointOpen::before {
  color: #d65d06;
  content: "○";
  font-weight: bolder;
  font-size: 26px;
}

.pointClose::after {
  color: #d65d06;
  content: "●";
  font-weight: bolder;
  font-size: 26px;
}

.mayorEqual::after {
  color: #646363;
  content: "\2265";
  font-weight: bolder;
  font-size: 26px;
}

.minorEqual::after {
  color: #646363;
  content: "\2264";
  font-weight: bolder;
  font-size: 26px;
}

.mayor::after {
  color: #646363;
  content: "\003E";
  font-weight: bolder;
  font-size: 26px;
}

.minor::after {
  color: #646363;
  content: "\003C";
  font-weight: bolder;
  font-size: 26px;
}

.equal::after {
  color: #646363;
  content: "\003D";
  font-weight: bolder;
  font-size: 26px;
}

.notEqual::after {
  color: #646363;
  content: "\2260";
  font-weight: bolder;
  font-size: 26px;
}

.empty::after {
  color: #646363;
  content: "\2205";
  font-weight: bolder;
  font-size: 26px;
}

.setOf::after {
  color: #646363;
  content: "\22C3";
  font-weight: bolder;
  font-size: 26px;
}

.intersection::after {
  color: #646363;
  content: "\22C2";
  font-weight: bolder;
  font-size: 26px;
}

.realNumber::after {
  color: #646363;
  content: "\0052";
  font-weight: bolder;
  font-size: 26px;
}
.parenthesisLeft::after {
  color: #646363;
  content: "\0028";
  font-weight: bolder;
  font-size: 26px;
}
.parenthesisRight::after {
  color: #646363;
  content: "\0029";
  font-weight: bolder;
  font-size: 26px;
}

.bracketsLeft::after {
  color: #646363;
  content: "\005B";
  font-weight: bolder;
  font-size: 26px;
}
.bracketsRight::after {
  color: #646363;
  content: "\005D";
  font-weight: bolder;
  font-size: 26px;
}

.keysLeft::after {
  color: #646363;
  content: "\007B";
  font-weight: bolder;
  font-size: 26px;
}
.keysRight::after {
  color: #646363;
  content: "\007D";
  font-weight: bolder;
  font-size: 26px;
}
.infiniteWrite::after {
  color: #646363;
  content: "\221E";
  font-weight: bolder;
  font-size: 26px;
}

.notExist::after {
  color: #646363;
  content: "\2204";
  font-weight: bolder;
  font-size: 26px;
}
/* Aqui Termina los iconos es formato unicode de los botones*/

/* --------------------------------------------------------------------- */
/* Inicio de Estilos de los botones primarios, secuandarios y tercearios */

.buttonPrimary {
  display: inline-block;
  width: 40px;
  height: 40px;
  background-color: #006ebb;
  border: none;
  border-radius: 0.25rem;
}
.buttonSecundary {
  display: inline-block;
  width: 40px;
  height: 40px;
  background-color: #a4abb1;
  border: none;
  border-radius: 0.25rem;
}
/* #a4abb1 */
.buttonTertiary {
  display: inline-block;
  width: 40px;
  height: 40px;
  background-color: #fff;
  border: 1px solid #646363;
  border-radius: 0.25rem;
}

.buttonAux {
  display: inline-block;
  width: 40px;
  height: 40px;
  background-color: #fff;
  border: 1px solid #e17055;
  border-radius: 0.25rem;
}

/* Termina Estilos de los botones primarios, secuandarios y tercearios */

/* Color de los input's en los artefactos del capitulo_0 */
.colorInput {
  position: relative;
  overflow: hidden;
  background-color: #fff;
  border-style: solid;
  border-width: 1px;
  border-color: #a569bd;
  border-radius: 10px;
  margin: 0;
  -webkit-border-radius: 10px;
  -ms-touch-action: none;
}

/* boards carlos */

.med-board {
  width: 400px;
  height: 400px;
}

.short-board {
  width: 350px;
  height: 200px;
}

.big-board {
  width: 600px;
  height: 450px;
}

.input-zise {
  width: 45px;
  border-radius: 10%;
}
/*dominio*/
.domKey::after {
  position: relative;
  top: -12px;
  left: 0px;
  color: #d65d06;
  content: "\2508";
  font-weight: bolder;
  font-size: 45px;
}
.rangKey::after {
  position: relative;
  top: -5px;
  left: 3.5px;
  color: #d65d06;
  content: "\2847";
  font-weight: bolder;
  font-size: 30px;
}
/*cota superior*/
.coteTop::after {
  color: #d65d06;
  content: "\2912";
  font-weight: bolder;
  font-size: 26px;
}
/*cota inferior*/
.coteDown::after {
  color: #d65d06;
  content: "\2913";
  font-weight: bolder;
  font-size: 26px;
}

/* Contenedor principal en el motor del capitulo 1 paginas 3-6  */
/* Crea un contenedor flexible y centra sus hijos */
.content_1 {
  display: flex;
  justify-content: center;
  align-content: center;
}
/* Contenedor Hijo, toma el ancho de contenedor padre y se coloca a 10px de margen */
.content_2 {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 10px;
}
/* Contenedor de para los textos toma el 100% del ancho de su padre
 y coloca los textos en formato centrado y con lineas separadas de 30px */
.contenedor {
  width: 100%;
  text-align: justify;
  line-height: 30px;
}
/* Clase para los titulos coloca un margen de 10px en los cuatro lados y pone en negrita el texto */
.subtitulo {
  margin: 10px;
  font-weight: bolder;
}
/* Clase para los parrafos coloca un margen de 10px en los cuatro lados y el texto lo coloca centrado */
.parrafo {
  /* margin-top: 10px; */
  text-align: justify;
}
/* Clase para los parrafos coloca flexible el contenedor y en filas los elementos */
.textDouble {
  display: flex;
  flex-direction: row;
}
/* margen de 5px */
.margen-5 {
  margin: 5px;
}
/* margen de 50px */
.margen-bottom-50 {
  margin-bottom: 50px;
}
/* margen izquierdo que calcula el ancho de la pantaña y lo resta por el 80% de ella
y añade el elemento a un poco menos de la mitad de la pantalla, de esta manera se logra un movimiento responsive */
.margen-left {
  margin-left: calc(100% - (82%));
}
/* Clase para cuando los artefactos se resuelven de manera correcta */
.pass {
  background-color: rgba(73, 225, 94, 0.4) !important;
}
/* Clase para cuando los artefactos se resuelven de manera incorrecta */
.failed {
  background-color: rgba(203, 78, 31, 0.4) !important;
}
/* Clase para cuando los artefactos no se les esta evaluando correcto e incorrecto sino su opinion */
.yellow {
  background-color: rgba(236, 184, 12, 0.4);
}
/* centra el contenido del input, desde el puntero y los value */
.inputCenter {
  text-align: center;
}
/* Margen entre los botones añade 4px a los cuatro lados del boton*/
.button-marg {
  margin: 4px;
}

.contentBoard_Double {
  width: 400px;
}
.margen-button {
  margin-bottom: 20px;
}

.board-item {
  width: 100px;
  height: 100px;
}
.contenedor::-webkit-scrollbar {
  width: 8px; /* Tamaño del scroll en vertical */
  height: 8px; /* Tamaño del scroll en horizontal */
}

.contenedor::-webkit-scrollbar-thumb {
  background: #ccc;
  border-radius: 4px;
}

/* Cambiamos el fondo y agregamos una sombra cuando esté en hover */
.contenedor::-webkit-scrollbar-thumb:hover {
  background: #b3b3b3;
  box-shadow: 0 0 2px 1px rgba(0, 0, 0, 0.2);
}

/* Cambiamos el fondo cuando esté en active */
.contenedor::-webkit-scrollbar-thumb:active {
  background-color: #999999;
}
/* Ponemos un color de fondo y redondeamos las esquinas del track */
.contenedor::-webkit-scrollbar-track {
  background: #e1e1e1;
  border-radius: 4px;
}

/* Cambiamos el fondo cuando esté en active o hover */
.contenedor::-webkit-scrollbar-track:hover,
.contenedor::-webkit-scrollbar-track:active {
  background: #d4d4d4;
}
/* Mediaquery para el responsive de los tableros */
@media only screen and (min-width: 500px) {
  .table-board {
    display: flex;
    justify-content: center;
    align-content: center;
    flex-wrap: wrap;
  }
}
@media only screen and (min-width: 500px) {
  .content_1 {
    display: flex;
    justify-content: center;
    align-content: center;
  }
}

@media only screen and (min-width: 400px) {
  .input-width {
    width: calc(100% - (60%));
  }
}

.input-width {
  width: calc(100% - (50%));
}
.center-td {
  text-align: center;
}
.table-width {
  width: calc(100% - (40%));
}

.reduce-table {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

/*////////////////
agregado boton para las curvas
centrado de texto
copia de del borde de la libreria
agregado estilo de incorrecto y correcto sin opasidad para usarlo en el board
//////////////*/
.curve::before {
  color: #d65d06;
  content: "\007E";
  font-weight: bolder;
  font-size: 30px;
}
/* centra el texto, con un tamaño predeterminado y un padding */
.textCenter {
  text-align: center;
  font-size: 12px;
  padding: 2px;
}

/*borde negro del board*/
.border-board-dark {
  position: relative;
  overflow: hidden;
  background-color: #fff;
  border-style: solid;
  border-width: 1px;
  border-color: #000000;
  border-radius: 10px;
  margin: 0;
  -webkit-border-radius: 10px;
  -ms-touch-action: none;
}

.passInLibrary {
  background-color: #b6f3bf;
}

.failedInLibrary {
  background-color: #eab8a5;
}
/* Clase para la nota en la pagina 3 de las opiniones
 hace flexible el contenedor, coloca sus elementos al principio y en columnas */
.nota {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
/* Clase para los comentarios en la pagina de texto html, plano solo hace flexive el contenedor */
.Contentext {
  display: flex;
}
/*crea una sangria o identacion de aproximado unos 30px en el texto  */
.spacing {
  text-indent: 30pt;
}
.divRounded {
  border-radius: 10px;
}

.back::after {
  color: black;
  content: "\21B6"; /* ó    ---> 21BA*/
  font-weight: bolder;
  font-size: 26px;
}
.input_invalid {
  background-color: #eab8a5;
}

.input_valid {
  background-color: #b6f3bf;
}
/* Estilos de los board  dobles con texto  */
.contentDoubleBaord {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-content: center;
  margin-top: 25px;
}
/* clase que se utiliza como contenedor de los board */
.sizeBoardDouble {
  width: 500px;
  margin: 20px;
  border: 1px solid black;
  text-align: center;
}
/* clases para crear una linea divisora en la parte de arriba de un contenedor */
.borderIndividual {
  border-top: 1px solid black;
}
/* clases que pone flexible un contenedor */
.contenedorGrid {
  width: 100%;
  display: flex;
  justify-content: center;
  align-content: center;
}
/* clase de pruba para verificar que los items-hijos de un contenedor padre esten dentros del mismo.
 Nota: Esta clase solo se utiliza de prueba. [Status: Testing ]*/
.test {
  border: 1px solid black;
}
/* grid por default, crea dos columnas y 3 filas con espacios de 20px para casa una de ellas */
.contenTest {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-column-gap: 20px;
  grid-row-gap: 20px;
}
/* clase que se utiliza para los elementos que se requiere en negrita, como conceptos claves en alguna definicion  */
.bold-example {
  text-align: center;
  font-weight: bold;
}
/* crea un margen arriba de 50px */
.margen-top-50 {
  margin-top: 50px;
}
/* es el ancho de los input del tablero estandarizado Nota: Puede que esta clase no se este utilizando, [Status:Por verificar] */
.input-width-normalice {
  width: calc(100% - (0%));
}

/* ancho del elemento th en el tablero */
.th-table {
  width: 120px;
  border: black 1px solid;
}
/* clase de prueba. Nota: Puede que esta clase no se este utilizando, [Status:Por verificar]*/
.input-table {
  width: 100%;
  border: 0;
}
.input-conf-Table {
  text-align: center;
  /* font-size: 14px; */
  padding: 2px;
}

.border-table {
  border: black 1px solid;
}

.input-default {
  background-color: #f6f3c9;
}

.input-sended {
  background-color: #f5d101;
}
/* MediaQuery -- Inicio del responsive de la grid de contenedores, crea una grid de 1 columna para el responsive de movil */
@media only screen and (min-width: 360px) and (max-width: 720px) {
  .contenTest {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-column-gap: 20px;
    grid-row-gap: 20px;
  }
  .artefact {
    width: 320px;
  }
  .table-width {
    width: 100%;
  }
  .allbuttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
  }
  .contentBoard_Double {
    width: 320px;
  }
}

@media only screen and (min-width: 720px) and (max-width: 850px) {
  .contenTest {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-column-gap: 20px;
    grid-row-gap: 20px;
  }
  .artefact {
    width: 320px;
  }
  .table-width {
    width: 100%;
  }
}
/* Finaliza el responsive  */

/* centra el contenido en un elemento */
.item {
  text-align: center;
}
/* clase para poner en negrita un titulo */
.titulo {
  font-weight: bolder;
  margin: 0;
}

/*
keyBoard
*/
/*clase inicial del keyboard lo alinea y lo pone no visible*/
.popup {
  display: none;
  align-content: center;
}
/*pone el border al conteneor superior del keyboard*/
.orange-bg {
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  background-color: orange;
  width: 100%;
}
/*contenedor padre del keyboard limita el ancho*/
.divParent {
  border-radius: 20px;
  min-height: 140px;
  max-width: 650px;
  min-width: 300px;
  width: 80%;
  background-color: grey;
  justify-items: center;
}
/*unicode del boton para abrir el keyboard*/
.keyBoard::after {
  color: rgb(0, 0, 0);
  content: "⌨";
  font-size: 30px;
  position: relative;
  top: -12px;
  left: -6px;
}
/* clase para el efecto de los botones */
.buttonKey {
  cursor: pointer;
  outline: none;
  color: #fff;
  box-shadow: 0 3px #999;
}
/*hover de los botones */
.buttonKey:hover {
  background-color: #899c;
}
/* al pulsar el boton se mueve hacia abajo 2 pixeles y cambia el fondo*/
.buttonKey:active {
  background-color: #797c;
  box-shadow: 0 2px #666;
  transform: translateY(2px);
}
/* estado active de los botones mantiene pulsado el boton */
.buttonDownActive {
  background-color: #797c;
  box-shadow: 0 2px #666;
  transform: translateY(2px);
}
/*  */
.closed {
  width: 30px;
  height: 30px;
}
/*unicode de la X para cerrar el keyboard*/
.closed::after {
  color: #000000;
  content: "\2179";
  font-size: 24px;
  position: relative;
  top: -5px;
}
/*estilos del boton que abre el keyboard*/
.butonKeyBoardOpen {
  display: inline-block;
  width: 50px;
  height: 40px;
  background-color: rgb(224, 198, 79);
  border: 2px solid #e17055;
  border-radius: 0.25rem;
}
/*/////// responsibe engine 0 ////////*/
.paddiv {
  width: 100%;
  max-width: 900px;
  min-width: 300px;
}
/*clase de estado 1 inputs engine 0 interval */
.inpEngInt-1 {
  min-height: 60px;
  width: 100%;
  min-width: 75px;
  max-width: 200px;
}
/*clase de estado 2 inputs engine 0 interval */
.inpEngInt-2 {
  min-height: 60px;
  min-width: 75px;
  width: 100%;
}
/*clase del board lo pone 100% de anccho y sus minimos */
.BoardEngInt {
  width: 100%;
  min-width: 150px;
  max-width: 650;
  min-height: 60px;
}

.contentArtefact {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  border: 1px solid black;
}
.textValInput {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 30px;
  border-top: 1px solid black;
  font-style: italic;
}

@media (min-width: 768px) {
  .hola {
    flex: 0 0 8px;
    max-width: 50%;
  }

  .input-width-frame {
    width: calc(100% - (85%));
  }
  .small_box {
    width: 100px;
    align-content: center;
  }
}

@media (min-width: 992px) {
  .hola {
    flex: 0 0 8px;
    max-width: 50%;
  }

  .input-width-frame {
    width: calc(100% - (85%));
    text-align: center;
  }

  .small_box {
    width: 250px;
    align-content: center;
  }
}

@media (min-width: 1200px) {
  .hola {
    flex: 0 0 8px;
    max-width: 50%;
    text-align: center;
  }
  .input-width-frame {
    width: calc(100% - (85%));
    text-align: center;
  }

  .small_box {
    width: 300px;
    align-content: center;
  }
}

@media (min-width: 1400px) {
  .hola {
    flex: 0 0 8px;
    max-width: 50%;
    text-align: center;
  }
  .input-width-frame {
    width: calc(100% - (85%));
    text-align: center;
  }

  .small_box {
    width: 400px;
    align-content: center;
  }
}

/* Tablero pequeños*/
@media (min-width: 768px) {
  .small_box_together {
    flex: 0 0 2px;
    max-width: 50%;
  }

  .input-width-frame {
    width: calc(100% - (85%));
  }
  .small_box {
    width: 100px;
    align-content: center;
    justify-content: center;
  }
}

@media (min-width: 992px) {
  .small_box_together {
    flex: 0 0 2px;
    max-width: 50%;
    border: 0px;
  }

  .input-width-frame {
    width: calc(100% - (85%));
    text-align: center;
  }

  .small_box {
    width: 220px;
    border: 0px;
    align-content: center;
    justify-content: center;
  }
}

@media (min-width: 1200px) {
  .small_box_together {
    flex: 0 0 2px;
    max-width: 45%;
    text-align: center;
  }
  .input-width-frame {
    width: calc(100% - (85%));
    text-align: center;
  }

  .small_box {
    width: 300px;
    border: 0px;
    align-content: center;
    justify-content: center;
  }
}

@media (min-width: 1400px) {
  .small_box_together {
    flex: 0 0 2px;
    max-width: 45%;
    text-align: center;
  }
  .input-width-frame {
    width: calc(100% - (90%));
    text-align: center;
  }

  .small_box {
    width: 400px;
  }
}

.centerFloat {
  position: absolute;
  align-self: center;
  text-align: center;
  margin-left: 10px;
  border-radius: 10px;
  margin-right: 10px;
  top: 15%;
}

/* Aqui empiezan los nuevos estilo */
.input-reduce {
  width: 24px;
  margin-left: 50px;
}

.itemContenFlex {
  display: flex;
  justify-content: center;
  align-items: center;
}

.borderNone {
  border: 0;
  border-radius: 2px;
}

.pass:hover {
  background-color: rgba(35, 194, 53, 0.6);
}
.failed:hover {
  background-color: rgba(167, 62, 22, 0.6);
}

.sizeContenedor {
  width: 400px;
}

.newGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(1, 1fr);
  grid-column-gap: 20px;
  grid-row-gap: 20px;
}

.banderGrid {
  display: flex;
}

.noBorder {
  border: 0;
}
.border-dark-top {
  width: 100%;
  border-top: 1px solid black;
}

.sizeInput-Default {
  width: 200px;
  margin-left: 10px;
}

.disabledGraph {
  background-color: #f0eaea !important;
  cursor: not-allowed;
}

.board_with_table {
  width: 250px;
  height: 250px;
}

.text-subrayado {
  background-color: #f6f3c9;
}

.text-table-font {
  font-size: 0.6rem;
}

.input-table.conf {
  width: 100%;
  padding: 0px;
}

.table-with {
  width: 300px;
}

.th-table-adjust {
  width: 32px !important;
  font-size: 0.6rem !important;
}

.buttons-bar {
  width: 260px !important;
  height: 50px;
}

.divOrdenate {
  width: 100%;
  display: flex;
  border-top: 1px solid black;
  font-style: italic;
}
.divAlignDouble {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
}
.divAlignSingle {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
}

.divOrder {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  border: 1px solid black;
}
.cleanStyleDefault {
  margin: 0;
  padding: 0;
  box-shadow: none;
  box-sizing: none;
}
.orderLarge {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.orderLitte {
  width: 100%;
  display: flex;
  justify-content: center;
}

/*//////////////////////////////////////////////////////////////////////////////////////////////////////////*/
.buttonSecundaryMod {
  display: inline-block;
  width: 80px;
  height: 40px;
  background-color: #a4abb1;
  border: none;
  border-radius: 0.25rem;
}

.squares-div {
  text-align: center;
  align-content: center;
  align-items: center;
  width: 382px;
}
@media only screen and (max-width: 500px) {
  .squares-div {
    width: 282px;
  }
}

math-field {
  caret-color: darkblue;
}
math-field::selection {
  background-color: darkblue;
  color: white;
}

.boardResp {
  width: 380px;
  height: 380px;
}

@media only screen and (max-width: 500px) {
  .boardResp {
    width: 280px;
    height: 280px;
  }
}

/* unicode camino*/
.visible::after {
  color: black;
  content: "\1f441"; /*"\1f441";*/
  font-weight: bolder;
  font-size: 26px;
}

.road::before {
  color: #d65d06;
  content: "\2608";
  font-weight: bolder;
  font-size: 30px;
}

.finishRoad::after {
  color: #d65d06;
  content: " ⊏";
  font-weight: bolder;
  font-size: 30px;
}
.help::after {
  color: #000000;
  content: "\2691";
  font-weight: bolder;
  font-size: 26px;
}

/*/////////////////////////////// Modal ///////////////////////////////////*/

.modal {
  display: none;
  position: fixed;
  z-index: 9;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0, 0, 0);
  background-color: rgba(0, 0, 0, 0.4);
}

/* Modal Content/Box */
.modal-content {
  left: 10%;
  top: 50%;
  align-self: center;
  justify-self: center;
  background-color: #fefefe;
  padding: 10px;
  border-radius: 20px;
  border: 1px solid #888;
  width: 80%;
}

/* Close Button */
.close {
  text-align: center;
  width: 38px;
  height: 38px;
  color: #aaa;
  float: right;
  font-size: 40px;
  font-weight: bold;
  background-color: #fff;
  border: 1px solid #e17055;
  border-radius: 0.25rem;
}

.closed:hover,
.closed:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

/***Estilos del cap_3****/

.mainContent {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
.borderDefault {
  border: 2px solid rgb(100, 172, 255);
  border-radius: 0.5rem;
}
.artifactGrid {
  display: grid;
  align-content: center;
  align-items: center;
  grid-template-columns: 80px 80px 80px 80px;
  grid-template-rows: 80px 80px 80px 80px 80px;
  grid-template-areas:
    ". rounded-0 rounded-0 ."
    "square-0 . arrowD-0 ."
    ". rounded-1  rounded-1 ."
    "square-1 . arrowD-1 ."
    ".  rounded-2 rounded-2 ."
    "divControllerButton divControllerButton divControllerButton divControllerButton";
}
.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.rounded-2 {
  grid-area: rounded-2;
}
.square-0 {
  grid-area: square-0;
  /* margin-left: 1.2rem; */
}
.square-1 {
  grid-area: square-1;
  /* margin-left: 1.2rem; */
}
.arrowD-0 {
  grid-area: arrowD-0;
}
.arrowD-1 {
  grid-area: arrowD-1;
}
.divControllerButton {
  grid-area: divControllerButton;
}
.artifactGridSimple{
  display: grid;
  align-content: center;
  align-items: center;
  grid-template-columns: 80px 80px 80px 80px;
  grid-template-rows: 80px 80px 80px 80px;
  grid-template-areas:
    ". rounded-0 rounded-0 ."
    "square-0 . arrowD-0 ."
    ". rounded-1  rounded-1 ."
    "divControllerButton divControllerButton divControllerButton divControllerButton";

}

.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.square-1 {
  grid-area: square-1;
  /* margin-left: 0.5rem; */
}
.arrowD-0 {
  grid-area: arrowD-0;
}
.form_1 {
  display: grid;
  align-content: center;
  align-items: center;
  grid-template-columns: 80px 80px 80px 80px;
  grid-template-rows: 60px 60px 60px 60px 60px 60px 60px 60px 60px;
  grid-template-areas:
    ". rounded-0 rounded-0 ."
    "square-0 . arrowD-0 ."
    ". rounded-1  rounded-1 ."
    "square-1 . arrowD-1 ."
    ".  rounded-2 rounded-2 ."
    "square-2 . arrowD-2 ."
    ".  rounded-3 rounded-3 ."
    "square-3 . arrowD-3 ."
    ".  rounded-4 rounded-4 ."
    "divControllerButton divControllerButton divControllerButton divControllerButton";
}
.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.rounded-2 {
  grid-area: rounded-2;
}
.rounded-3 {
  grid-area: rounded-3;
}
.rounded-4 {
  grid-area: rounded-4;
}
.square-0 {
  grid-area: square-0;
  margin-left: 0.5rem;
}
.square-1 {
  grid-area: square-1;
  margin-left: 0.5rem;
}
.square-2 {
  grid-area: square-2;
  margin-left: 0.5rem;
}
.square-3 {
  grid-area: square-3;
  margin-left: 0.5rem;
}
.arrowD-0 {
  grid-area: arrowD-0;
}
.arrowD-1 {
  grid-area: arrowD-1;
}
.arrowD-2 {
  grid-area: arrowD-2;
}
.arrowD-3 {
  grid-area: arrowD-3;
}

.divControllerButton {
  grid-area: divControllerButton;
}

.form_2 {
  display: grid;
  align-content: center;
  align-items: center;
  justify-content: center;
  grid-template-columns: 113px 60px 20px 135px;
  grid-template-rows: 60px 60px 60px 60px 60px 60px 60px 60px 60px;
  grid-template-areas:
    "divInputVF divInputVF divInputVF divInputVF"
    "rounded-0 rounded-0 rounded-1 rounded-1"
    "square-0 arrowD-0 arrowD-4 square-4"
    "rounded-2 rounded-2 rounded-3 rounded-3"
    "square-1 arrowD-1 arrowD-5 square-5"
    "rounded-4 rounded-4 rounded-5 rounded-5"
    "square-2 arrowD-2 arrowD-6 square-6"
    "rounded-6 rounded-6 rounded-7 rounded-7"
    "square-3 arrowD-3 arrowD-7 square-7"
    "rounded-8 rounded-8 rounded-9 rounded-9"
    "divControllerButton divControllerButton divControllerButton divControllerButton";
}

.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.rounded-2 {
  grid-area: rounded-2;
}
.rounded-3 {
  grid-area: rounded-3;
}
.rounded-4 {
  grid-area: rounded-4;
}
.rounded-5 {
  grid-area: rounded-5;
}
.rounded-6 {
  grid-area: rounded-6;
}
.rounded-7 {
  grid-area: rounded-7;
}
.rounded-8 {
  grid-area: rounded-8;
}
.rounded-9 {
  grid-area: rounded-9;
}

.square-0 {
  grid-area: square-0;
  /* margin-left: 0.5rem; */
}
.square-1 {
  grid-area: square-1;
  /* margin-left: 1.2rem; */
}
.square-2 {
  grid-area: square-2;
  /* margin-left: 0.5rem; */
}
.square-3 {
  grid-area: square-3;
  /* margin-left: 1.2rem; */
}
.square-4 {
  grid-area: square-4;
  /* margin-left: 0.5rem; */
}
.square-5 {
  grid-area: square-5;
  /* margin-left: 1.2rem; */
}
.square-6 {
  grid-area: square-6;
  /* margin-left: 0.5rem; */
}
.square-7 {
  grid-area: square-7;
  /* margin-left: 1.2rem; */
}

.arrowD-0 {
  grid-area: arrowD-0;
  width: 40px !important;
}
.arrowD-1 {
  grid-area: arrowD-1;
  width: 40px !important;
}
.arrowD-2 {
  grid-area: arrowD-2;
  width: 40px !important;
}
.arrowD-3 {
  grid-area: arrowD-3;
  width: 40px !important;
}
.arrowD-4 {
  grid-area: arrowD-4;
  width: 40px !important;
}
.arrowD-5 {
  grid-area: arrowD-5;
  width: 40px !important;
}
.arrowD-6 {
  grid-area: arrowD-6;
  width: 40px !important;
}
.arrowD-7 {
  grid-area: arrowD-7;
  width: 40px !important;
}
.divInputVF {
  grid-area: divInputVF;
}
.divControllerButton {
  grid-area: divControllerButton;
}

.element {
  display: flex;
  justify-content: center;
  align-items: center;
}

.arrowUp::after {
  color: black;
  content: "\2191";
  font-size: 50px;
}
.arrowDown::after {
  color: black;
  content: "\2193";
  font-size: 50px;
}

.pass {
  background-color: rgba(73, 225, 94, 0.4) !important;
}

.failed {
  background-color: rgba(203, 78, 31, 0.4) !important;
}

.math {
  width: 100%;
  font-size: 1.1em;
  text-align: center !important;
}

.divControllerButton {
  display: flex;
  justify-content: center;
  align-items: center;
}
.screenDouble-0,
.screenDouble-2,
.screenDouble-4,
.screenDouble-6,
.screenDouble-8 {
  border-radius: 2rem 0 0 2rem !important;
}
.screenDouble-1,
.screenDouble-3,
.screenDouble-5,
.screenDouble-7,
.screenDouble-9 {
  border-radius: 0 2rem 2rem 0 !important;
}
.form_4 {
  display: grid;
  align-content: center;
  align-items: center;
  grid-template-columns: 80px 80px 80px 80px;
  grid-template-rows: 60px 60px 60px 60px 60px 60px 60px;
  grid-template-areas:
    ". rounded-0 rounded-0 ."
    "square-0 . arrowD-0 ."
    ". rounded-1  rounded-1 ."
    "square-1 . arrowD-1 ."
    ".  rounded-2 rounded-2 ."
    "square-2 . arrowD-2 ."
    ".  rounded-3 rounded-3 ."
    "square-3 . arrowD-3 ."
    "divControllerButton divControllerButton divControllerButton divControllerButton";
}
.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.rounded-2 {
  grid-area: rounded-2;
}
.rounded-3 {
  grid-area: rounded-3;
}
.rounded-4 {
  grid-area: rounded-4;
}
.square-0 {
  grid-area: square-0;
 /*  margin-left: 0.5rem; */
}
.square-1 {
  grid-area: square-1;
 /*  margin-left: 0.5rem; */
}
.square-2 {
  grid-area: square-2;
 /*  margin-left: 0.5rem; */
}
.square-3 {
  grid-area: square-3;
 /*  margin-left: 0.5rem; */
}
.arrowD-0 {
  grid-area: arrowD-0;
}
.arrowD-1 {
  grid-area: arrowD-1;
}
.arrowD-2 {
  grid-area: arrowD-2;
}
.arrowD-3 {
  grid-area: arrowD-3;
}
.form_5 {
  display: grid;
  align-content: center;
  align-items: center;
  justify-self: center;
  grid-template-columns: 90px 65px 65px 90px;
  grid-template-rows: 80px 80px 80px 80px;
  grid-template-areas:
    ". rounded-0 rounded-0 ."
    "square-0 arrowD-0 arrowD-1 square-1"
    ". rounded-1  rounded-1 ."
    "divControllerButton divControllerButton divControllerButton divControllerButton";
}
.rounded-0 {
  grid-area: rounded-0;
}
.rounded-1 {
  grid-area: rounded-1;
}
.arrowD-0 {
  grid-area: arrowD-0;
  /* margin-left: 25px; */
}
.arrowD-1 {
  grid-area: arrowD-1;
 /*  margin-left: 20px; */

}
.square-0 {
  grid-area: square-0;
  /* margin-left: 0.5rem; */
}
.square-1 {
  grid-area: square-1;
  /* margin-left: 0.5rem; */
}
.equation-0{
  grid-area: equation-0;
}
.solution-1{
  grid-area: solution-1;
}
.divControllerButton {
  grid-area: divControllerButton;
}
.form_6 {
  display: grid;
  align-content: center;
  align-items: center;
  grid-template-columns: 10px 80px 40px 20px 20px 20px 20px 40px 80px 10px;
  grid-template-rows: 80px 80px 80px 80px 80px;
  grid-template-areas:
    ". equation-0 equation-0 equation-0 equation-0 equation-0 equation-0 equation-0 equation-0 ."
    ". rounded-0 rounded-0 rounded-0 rounded-0 rounded-1 rounded-1 rounded-1 rounded-1 ."
    ". square-0 square-0 arrowD-0 . arrowD-1 . square-1 square-1 ."
    ". rounded-2 rounded-2 rounded-2 rounded-2 rounded-3 rounded-3 rounded-3 rounded-3 ."
    ". solution-1 solution-1 solution-1 solution-1 solution-1 solution-1 solution-1 solution-1 ."
    ". divControllerButton divControllerButton divControllerButton divControllerButton divControllerButton divControllerButton divControllerButton divControllerButton .";
}


.divInputVF {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50px;
}

.contentText{
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-content: space-around;
}
/* Format clean list */
.formatList{
  list-style: none;
  text-decoration: none;
  margin-left: 2.5rem;
}
/* Content Form MathInput */
.contetMathInput{
  margin: 0.5rem;
  display: flex;
  justify-content: center;
}
.contentTitleParagraph{
  display: flex;
  flex-direction: column;
  margin: 0.5rem;
  text-align: justify;
  text-justify: inter-word;
}
.itemMargin-2{
  margin: 4px;
}
.itemMarginLeft-2{
  margin-left: 0.5rem;
}
.inputExample{
  width: 225px;
  height: 50px;
  border: 1px solid black;
}
.mathExample{
  width: 100%;
  font-size: 2em;
  text-align: center !important;
  
}
.mathExampleText{
  width: 100%;
  font-size: 1em;
  opacity: 1;
}
.mathExampleTextExample{
    margin: 0.5rem;
    display: flex;
    opacity: 1;
    flex-direction: column;
    justify-content: center;
}
.paralelas {
  background-image: linear-gradient(to right, black 1px, transparent 1px), linear-gradient(to bottom, black 1px, transparent 1px);
  background-size: 10px 100%, 100% 10px;
  background-position: 0 0, 0 0;
  height: 100px;
}

.paralelasDos {
  background-image: repeating-linear-gradient(to right, black, black 2px, transparent 2px, transparent 4px);
  height: 100%; /* Altura de la caja */
  width: 100%; /* Ancho de la caja */
}